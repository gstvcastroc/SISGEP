// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SISGEP.Application.Data;

#nullable disable

namespace SISGEP.Application.Migrations
{
    [DbContext(typeof(SISGEPContext))]
    partial class SISGEPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersonProject", b =>
                {
                    b.Property<Guid>("PersonsPersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectsProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("PersonsPersonId", "ProjectsProjectId");

                    b.HasIndex("ProjectsProjectId");

                    b.ToTable("PersonProject");
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Number")
                        .HasColumnType("smallserial");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Thoroughfare")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("SISGEP.Application.Entities.FilledSurvey", b =>
                {
                    b.Property<Guid>("FilledSurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Structure")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.HasKey("FilledSurveyId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SurveyId");

                    b.ToTable("filled-survey", (string)null);
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PersonType")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("PersonId");

                    b.ToTable("person", (string)null);
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime?>("StartDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.HasKey("ProjectId");

                    b.ToTable("project", (string)null);
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Survey", b =>
                {
                    b.Property<Guid>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Structure")
                        .IsRequired()
                        .HasColumnType("json");

                    b.HasKey("SurveyId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("survey", (string)null);
                });

            modelBuilder.Entity("PersonProject", b =>
                {
                    b.HasOne("SISGEP.Application.Entities.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SISGEP.Application.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Address", b =>
                {
                    b.HasOne("SISGEP.Application.Entities.Person", null)
                        .WithOne("Address")
                        .HasForeignKey("SISGEP.Application.Entities.Address", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEP.Application.Entities.FilledSurvey", b =>
                {
                    b.HasOne("SISGEP.Application.Entities.Person", null)
                        .WithMany("FilledSurveys")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SISGEP.Application.Entities.Survey", null)
                        .WithMany("FilledSurveys")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Survey", b =>
                {
                    b.HasOne("SISGEP.Application.Entities.Project", null)
                        .WithOne("Survey")
                        .HasForeignKey("SISGEP.Application.Entities.Survey", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Person", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("FilledSurveys");
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Project", b =>
                {
                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SISGEP.Application.Entities.Survey", b =>
                {
                    b.Navigation("FilledSurveys");
                });
#pragma warning restore 612, 618
        }
    }
}
